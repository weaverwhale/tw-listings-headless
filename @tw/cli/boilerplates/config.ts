import { getSensoryFetcherName } from './getName';
import type { TWBase, TWNodePackage, TWNodeService, TWPythonService } from './types';

export const bases: TWBase[] = [
  {
    id: 'node-express',
    name: 'Node Express Service',
    isService: true,
    isPackage: false,
    language: 'ts',
    hasTwConfig: true,
    templateDir: 'services/node-express-service',
    isJest: true,
    dependencies: ['@tw/utils', 'express'],
    devDependencies: [
      '@tw/types',
      '@tw/test-utils',
      'jest',
      'ts-jest',
      '@types/express',
      '@types/jest',
    ],
    infraDependencies: ['@tw/pulumi', '@pulumi/pulumi', '@pulumi/gcp'],
  } as TWNodeService,
  {
    id: 'node-package',
    name: 'Node Package',
    isService: false,
    isPackage: true,
    language: 'ts',
    hasTwConfig: true,
    templateDir: 'packages/node-package',
    isJest: true,
    dependencies: ['@tw/utils'],
    devDependencies: ['@tw/types', '@tw/test-utils', 'jest', 'ts-jest'],
  } as TWNodePackage,
  {
    id: 'node-sensory',
    name: 'Node Sensory Fetcher',
    isService: true,
    isPackage: false,
    isFetcher: true,
    language: 'ts',
    hasTwConfig: true,
    templateDir: 'services/node-sensory-fetcher',
    dependencies: ['@tw/constants', '@tw/utils', '@tw/temporal', 'express'],
    devDependencies: ['typescript', '@types/node', '@tw/types', '@types/express'],
    infraDependencies: ['@tw/pulumi', '@pulumi/pulumi', '@pulumi/gcp'],
    getNames: getSensoryFetcherName,
  } as TWNodeService,
  {
    id: 'node-temporal',
    name: 'Node Temporal Worker',
    isService: true,
    isPackage: false,
    language: 'ts',
    hasTwConfig: true,
    templateDir: 'services/node-temporal-worker',
    dependencies: ['@tw/constants', '@tw/temporal', '@tw/utils', 'express', '@temporalio/workflow'],
    devDependencies: ['@types/express', '@types/node', '@tw/types', 'typescript'],
    infraDependencies: ['@tw/pulumi', '@pulumi/pulumi', '@pulumi/gcp'],
  } as TWNodeService,
  {
    id: 'python-service',
    name: 'Python Service with FastAPI',
    isService: true,
    isPackage: false,
    language: 'python',
    hasTwConfig: true,
    templateDir: 'services/python-fastapi-service',
    requirements: ['tw-utils', 'fastapi', 'uvicorn'],
    infraDependencies: ['@tw/pulumi'],
  } as TWPythonService,
];

export const DIRNAME = __dirname.replace('/module', '/src');
